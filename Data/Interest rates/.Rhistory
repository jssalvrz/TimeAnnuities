library(readxl)
library(tidyverse)
#-----------------------------------------------------
#Read data
#-----------------------------------------------------
Data_1970_2015 <- read_excel(path ="Data/Interest rates/Term Structure/GLC Nominal month end data_1970 to 2015.xlsx",
sheet = "4. spot curve",
range = "A4:AY557"  )
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
#-----------------------------------------------------
#Read data
#-----------------------------------------------------
Data_1970_2015 <- read_excel(path ="GLC Nominal month end data_1970 to 2015.xlsx",
sheet = "4. spot curve",
range = "A4:AY557"  )
Data_2016_2020 <- read_excel(path ="GLC Nominal month end data_2016 to present.xlsx",
sheet = "4. spot curve",
range = "A4:CC62"  )
Data_2016_2024 <- read_excel(path ="GLC Nominal month end data_2016 to present.xlsx",
sheet = "4. spot curve",
range = "A4:CC62"  )
Data_1970_2024 <- bind_rows(Data_1970_2015, Data_2016_2024)
Data_1970_2024_long <- Data_1970_2024 %>%
pivot_longer(cols = -`years:`, names_to = "term", values_to = "spot") %>%
rename(date = `years:`) %>%
mutate(term = as.numeric(term),
spot = spot/100) %>%
filter(!is.na(date))
View(Data_1970_2024)
#-----------------------------------------------------
#Fill in missing values for the short end
#-----------------------------------------------------
Data_1970_2024_long_short_end <- Data_1970_2024_long %>%
filter(term < 5) %>% fill(spot, .direction = "up")
Data_1970_2024_long_long_end <- Data_1970_2024_long %>%
filter(term >= 5)
Data_1970_2024_long <- bind_rows(Data_1970_2024_long_short_end, Data_1970_2024_long_long_end) %>%
arrange(date,term)
View(Data_1970_2024)
#Use only integer terms
Data_1970_2024_long <- Data_1970_2024_long %>% filter(term %in% 1:40)
#Compute forward force
Data_1970_2024_long <- Data_1970_2024_long %>%
group_by(date) %>%
mutate(forward_force =  term * log(1+spot) - lag(term) * log(lag(1+spot))) %>%
ungroup() %>%
mutate(forward_force = ifelse(term == 1, log(1+spot), forward_force)) %>%
fill(forward_force) #Fill long end of the curve
library(readxl)
library(tidyverse)
#-----------------------------------------------------
#Read data
#-----------------------------------------------------
Data_1970_2015 <- read_excel(path ="GLC Nominal month end data_1970 to 2015.xlsx",
sheet = "4. spot curve",
range = "A4:AY557"  )
Data_2016_2024 <- read_excel(path ="GLC Nominal month end data_2016 to present - to 2024.xlsx",
sheet = "4. spot curve",
range = "A4:CC112"  )
Data_1970_2024 <- bind_rows(Data_1970_2015, Data_2016_2024)
Data_1970_2024_long <- Data_1970_2024 %>%
pivot_longer(cols = -`years:`, names_to = "term", values_to = "spot") %>%
rename(date = `years:`) %>%
mutate(term = as.numeric(term),
spot = spot/100) %>%
filter(!is.na(date))
#-----------------------------------------------------
#Fill in missing values for the short end
#-----------------------------------------------------
Data_1970_2024_long_short_end <- Data_1970_2024_long %>%
filter(term < 5) %>% fill(spot, .direction = "up")
Data_1970_2024_long_long_end <- Data_1970_2024_long %>%
filter(term >= 5)
Data_1970_2024_long <- bind_rows(Data_1970_2024_long_short_end, Data_1970_2024_long_long_end) %>%
arrange(date,term)
#Use only integer terms
Data_1970_2024_long <- Data_1970_2024_long %>% filter(term %in% 1:40)
#Compute forward force
Data_1970_2024_long <- Data_1970_2024_long %>%
group_by(date) %>%
mutate(forward_force =  term * log(1+spot) - lag(term) * log(lag(1+spot))) %>%
ungroup() %>%
mutate(forward_force = ifelse(term == 1, log(1+spot), forward_force)) %>%
fill(forward_force) #Fill long end of the curve
View(Data_1970_2024_long)
write_csv(Data_1970_2024_long, path = "Term Structure/Processed_Term_Structure.csv")
write_csv(Data_1970_2024_long, path = "Processed_Term_Structure.csv")
iRate <- read_csv("UKlongtermrate.csv")
setwd("C:/Git/TimeAnnuities/Data/Interest rates/")
iRate <- read_csv("UKlongtermrate.csv")
View(iRate)
UKlongtermrate <- read.csv("C:/Git/TimeAnnuities/Data/Interest rates/UKlongtermrate.csv", sep=";")
View(UKlongtermrate)
iRate <- ead.csv("C:/Git/TimeAnnuities/Data/Interest rates/UKlongtermrate.csv", sep=";")
iRate <- read.csv("C:/Git/TimeAnnuities/Data/Interest rates/UKlongtermrate.csv", sep=";")
# Interest rates ----------------------------------------------------------
names(iRate) <- c("Year", "Month", "delta")
iRate$delta <- iRate$delta/100
# Annual rates
aRate <- iRate %>% group_by(Year)  %>% summarize(delta = mean(delta))
aRate$sdelta <- smooth.spline(aRate$delta, spar = 0.4)$y
ggplot(aRate)+
geom_line(aes(Year,delta))+
geom_line(aes(Year,sdelta), colour = "red")
aRate$sdelta <- smooth.spline(aRate$delta, spar = 0.8)$y
ggplot(aRate)+
geom_line(aes(Year,delta))+
geom_line(aes(Year,sdelta), colour = "red")
aRate$sdelta <- smooth.spline(aRate$delta, spar = 0.2)$y
ggplot(aRate)+
geom_line(aes(Year,delta))+
geom_line(aes(Year,sdelta), colour = "red")
aRate$sdelta <- smooth.spline(aRate$delta, spar = 0.3)$y
ggplot(aRate)+
geom_line(aes(Year,delta))+
geom_line(aes(Year,sdelta), colour = "red")
library(MortalitySmooth)
install.packages("MortalityGaps")
